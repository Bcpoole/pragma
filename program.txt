//A cluster display of all cases (prior to objects) of how I want me language to work
//comment

func1() {
  /*t = true;
  if (t == true) {
    t = false;
  }*/
  
  //hello moto
  
  if (3 == 4 || 5 == 5) {
  
  }
  
  if (3 == 3 && 5 == 5) {
  
  }
  
  () => { };
  (7) => { };
  myLambda = () => { };
  
  smallDict = {"five" : 5};
  longDict = {"one" : 1, "two" : 2};

  func2(40000);
}

func2(x) {
  func3(x, y) {
    func4();
  }

  func3(5, "granite");
}

func4() {
  a;
  
  i = 0;
  while (i < 10) {
    i++;
  }
  
  if (i > 8) {
  
  }
  
  if (i == 7) {
  
  } elif (i >= 10) {
  
  }
  
  if (i == 3) {
  
  } else {
  
  }
  
  if (i <= 4) {
  
  } elif (i == 4) {
  
  } else {
  
  }
  
  a = 5 + 5;
  a = 5 - 5;
  a = 5 * 5;
  a = 5 / 5;
  a = 5 % 5;
  a = 5 ^ 3;
  a += 5;
  a -+ 5;
  a *= 5;
  a /= 5;
  a %= 5;
  a ^= 0;
  
  b = [5, 3, 2];
  
  n = -5;
  
  if (n != 4) {
  
  }
  
  return 0;
}
